<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>keoy</title>
  
  <subtitle>keoy</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://keoy.xyz/"/>
  <updated>2019-03-09T06:38:54.925Z</updated>
  <id>https://keoy.xyz/</id>
  
  <author>
    <name>keoy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>npm采踩坑系列</title>
    <link href="https://keoy.xyz/2019/03/06/npm_eroor/"/>
    <id>https://keoy.xyz/2019/03/06/npm_eroor/</id>
    <published>2019-03-05T16:11:00.000Z</published>
    <updated>2019-03-09T06:38:54.925Z</updated>
    
    <content type="html"><![CDATA[<h2><a href="#qian-yan" class="header-anchor">#</a><span id="qian-yan">前言</span></h2><p>这几天想给添加一点东西，于是就用npm安装了一个插件，然后就提示出错了 来踩坑了<br><a id="more"></a></p><div class="toc-ul"><!-- toc --><ul><li><a href="#cuo-wu">错误</a></li><li><a href="#jie-jue">解决</a></li></ul><!-- tocstop --><p></div></p><h3><a href="#cuo-wu" class="header-anchor">#</a><span id="cuo-wu">错误</span></h3><p>证书错误<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install -g create-react-app</span><br><span class="line"><span class="comment">//出错提示</span></span><br><span class="line">UNABLE_TO_VERIFY_LEAF_SIGNATURE</span><br><span class="line">UNABLE_TO_VERIFY_LEAF_SIGNATURE</span><br><span class="line">unable to verify the first certificate<span class="comment">//无法验证第一证书</span></span><br></pre></td></tr></table></figure></p><h3><a href="#jie-jue" class="header-anchor">#</a><span id="jie-jue">解决</span></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//因为npm install走的是https协议，需要通过数字证书来保证的，</span></span><br><span class="line"><span class="comment">//所以，取消ssl验证</span></span><br><span class="line">npm config <span class="keyword">set</span> strict-ssl false</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这几天想给添加一点东西，于是就用npm安装了一个插件，然后就提示出错了 来踩坑了&lt;br&gt;
    
    </summary>
    
    
      <category term="npm" scheme="https://keoy.xyz/tags/npm/"/>
    
      <category term="webpack" scheme="https://keoy.xyz/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>Promise对象入门</title>
    <link href="https://keoy.xyz/2019/02/22/promise/"/>
    <id>https://keoy.xyz/2019/02/22/promise/</id>
    <published>2019-02-22T15:35:00.000Z</published>
    <updated>2019-03-09T11:25:00.919Z</updated>
    
    <content type="html"><![CDATA[<h3><a href="#jian-jie" class="header-anchor">#</a><span id="jian-jie">简介</span></h3><hr><p>promise对象可以获取异步操作的消息，提供统一的API,各个异步操作都可以用同样的方法进行处理。<br>promise对象不受外界影响，其有三种状态：<code>pending</code>（进行中）、<code>fulfilled</code>（成功）、<code>rejected</code>（失败），只有异步操作的结果可以决定当前状态，一旦状态改变就不可以再变化，状态改变方向有两种：<code>pending</code> -&gt; <code>fulfilled</code>、<code>pending</code> -&gt; <code>rejected</code><br>promise对象的意义就在于将异步操作以同步操作的流程表达，避免层层嵌套的回调函数  </p><a id="more"></a><div class="toc-ul"><!-- toc --><ul><li><a href="#ji-ben-yong-fa">基本用法</a></li><li><a href="#catch">catch</a></li><li><a href="#finally">finally</a></li><li><a href="#all">all</a></li></ul><!-- tocstop --><p></div></p><h3><a href="#ji-ben-yong-fa" class="header-anchor">#</a><span id="ji-ben-yong-fa">基本用法</span></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> () &#123;</span><br><span class="line">    resolve(value) <span class="comment">// 异步操作成功</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    reject(error) <span class="comment">// 失败抛错</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>Promise构造函数接受一个函数作为参数，该函数有两个参数：<code>resolve</code>、<code>reject</code>，当执行<code>resolve</code>函数时<code>Promise</code>对象状态<code>pending</code> -&gt; <code>fulfilled</code>，当执行reject时Promise对象状态<code>pending</code> -&gt; <code>rejected</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">promise.then(<span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">  </span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>Promise实例生成以后，可以用<code>then</code>方法分别指定<code>resolved</code>状态和<code>rejected</code>状态的回调函数，第二个参数为可选参数，例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'promise'</span>)</span><br><span class="line">  resolve(<span class="string">'11'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">promise.then(<span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(value)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'22'</span>)</span><br></pre></td></tr></table></figure><p>执行结果’promise -&gt; 22 -&gt; 11’,promise对象新建后立即执行，<code>then</code>方法的回调会在所有同步任务执行完成后执行  </p><h3><a href="#catch" class="header-anchor">#</a><span id="catch">catch</span></h3><p><code>promise.prototype.catch()</code>是<code>then()</code>方法的别名，用于指定发生错误时的回调函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>如果异步操作抛出错误，状态就会变为<code>reject</code>，就会调用<code>catch</code>中的回调，当状态为<code>resolve</code>，执行<code>then</code>方法中的回调时，若报错同样回进入<code>catch</code>的回调<br>意义：当我们使用promise异步操作时，但是没有使用<code>catch</code>捕获错误时，若promise异步执行报错时，外部代码并不会接收到错误，而是继续执行不受影响</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> someAsyncThing = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">    resolve(x);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">someAsyncThing().then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'ok'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="built_in">console</span>.log(<span class="string">'continue'</span>) &#125;, <span class="number">100</span>);</span><br></pre></td></tr></table></figure><p>如代码所示，<code>x</code>变量并没有定义，期待的操作是执行报错，然后停止运行，实际上<code>continue</code>会执行输出，这说明当没有catch捕获错误时，外部代码不会知道Promise对象内部执行已经报错，因此会继续执行。</p><h3><a href="#finally" class="header-anchor">#</a><span id="finally">finally</span></h3><p>不管Promise对象最后结果如何，都会执行的操作，<code>finally</code>方法中的回调函数不接受任何参数<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">promise</span><br><span class="line">.then(<span class="function"><span class="params">result</span> =&gt;</span> &#123;···&#125;)</span><br><span class="line">.catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;···&#125;)</span><br><span class="line">.finally(<span class="function"><span class="params">()</span> =&gt;</span> &#123;···&#125;);</span><br></pre></td></tr></table></figure></p><h3><a href="#all" class="header-anchor">#</a><span id="all">all</span></h3><p><code>Promise.all</code>方法用于将多个Promise实例包装成一个新的实例<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.all([p1,p2,p3]).then(<span class="function">(<span class="params">array</span>) =&gt;</span> &#123;</span><br><span class="line">  </span><br><span class="line">&#125;).catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>只有<code>p1</code>、<code>p2</code>、<code>p3</code>的状态都变成<code>fulfilled</code>，<code>p</code>的状态才会变成<code>fulfilled</code>，此时<code>p1</code>、<code>p2</code>、<code>p3</code>的返回值组成一个数组，传递给<code>p</code>的回调函数。<br>只要<code>p1</code>、<code>p2</code>、<code>p3</code>之中有一个被<code>rejected</code>，<code>p</code>的状态就变成<code>rejected</code>，此时第一个被<code>reject</code>的实例的返回值，会传递给<code>p</code>的回调函数。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;promise对象可以获取异步操作的消息，提供统一的API,各个异步操作都可以用同样的方法进行处理。&lt;br&gt;promise对象不受外界影响，其有三种状态：&lt;code&gt;pending&lt;/code&gt;（进行中）、&lt;code&gt;fulfilled&lt;/code&gt;（成功）、&lt;code&gt;rejected&lt;/code&gt;（失败），只有异步操作的结果可以决定当前状态，一旦状态改变就不可以再变化，状态改变方向有两种：&lt;code&gt;pending&lt;/code&gt; -&amp;gt; &lt;code&gt;fulfilled&lt;/code&gt;、&lt;code&gt;pending&lt;/code&gt; -&amp;gt; &lt;code&gt;rejected&lt;/code&gt;&lt;br&gt;promise对象的意义就在于将异步操作以同步操作的流程表达，避免层层嵌套的回调函数  &lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://keoy.xyz/tags/javascript/"/>
    
      <category term="promise" scheme="https://keoy.xyz/tags/promise/"/>
    
  </entry>
  
  <entry>
    <title>一道JS闭包面试题</title>
    <link href="https://keoy.xyz/2019/02/22/bibao/"/>
    <id>https://keoy.xyz/2019/02/22/bibao/</id>
    <published>2019-02-22T14:35:00.000Z</published>
    <updated>2019-03-05T16:12:23.219Z</updated>
    
    <content type="html"><![CDATA[<h3><a href="#shuo-ming" class="header-anchor">#</a><span id="shuo-ming">说明</span></h3><p>最近看到这样一段代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">n,o</span>)</span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(o);</span><br><span class="line">   <span class="keyword">return</span> &#123;</span><br><span class="line">       fun:<span class="function"><span class="keyword">function</span>(<span class="params">m</span>)</span>&#123;</span><br><span class="line">           <span class="keyword">return</span> fun(m,n);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = fun(<span class="number">0</span>);a.fun(<span class="number">1</span>);a.fun(<span class="number">2</span>);a.fun(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">var</span> b = fun(<span class="number">0</span>).fun(<span class="number">1</span>).fun(<span class="number">2</span>).fun(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">var</span> c = fun(<span class="number">0</span>).fun(<span class="number">1</span>);c.fun(<span class="number">2</span>);c.fun(<span class="number">3</span>);</span><br><span class="line"><span class="comment">//问:三行a,b,c的输出分别是什么？</span></span><br></pre></td></tr></table></figure><p>觉得有点意思，和大家一起来聊聊。<br>我相信如果你不是非常理解JavaScript中的闭包，一定是不想看这段代码的。<br><a id="more"></a> </p><div class="toc-ul"><!-- toc --><ul><li><a href="#jie-shi">解释</a></li><li><a href="#zong-jie">总结</a></li></ul><!-- tocstop --><p></div></p><h3><a href="#jie-shi" class="header-anchor">#</a><span id="jie-shi">解释</span></h3><p>好的，我们暂时先不去想这段代码，先看点简单的  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun0</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line">fun0();    <span class="comment">//1</span></span><br><span class="line">fun1();    <span class="comment">//报错 a is not defined</span></span><br></pre></td></tr></table></figure><p>这段代码，我相信大家应该知道最后为什么结果会是 1 和 报错 的，在函数内声明的变量只在函数体内定义，它们是局部变量，作用域是局部的，所以 函数 fun1 调用后，找不到a，就报错了，JavaScript采用词法作用域，函数的执行依赖于变量作用域，这个作用域是在函数定义时决定的，所以我们只要改改上面函数 fun1的位置，它就不会报错了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun0</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把fun1放在fun0中，就不报错了</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(a);</span><br><span class="line">    &#125;</span><br><span class="line">    fun1();   <span class="comment">//1</span></span><br><span class="line">&#125;</span><br><span class="line">fun0();   <span class="comment">//1</span></span><br></pre></td></tr></table></figure><p>代码改成这样，只是把fun1 放在 fun0 中就不报错了，函数调用后都输出1<br>好了，我们来看最开始提到的代码，先简化一下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">n,o</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们先看这段代码，fun 调用后会怎么样？<br>很明显会返回一个空对象，记住，fun调用后会返回对象，这点很重要。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">n,o</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(o);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        fun:<span class="function"><span class="keyword">function</span>(<span class="params">m</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> fun(m,n);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">var</span> a = fun(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>这里提一句，当调用函数的时候传入的实参比函数声明时指定的形参个数要少，剩下的形参都将设置为undefined值。<br><code>console.log(o);</code> 输出undefined<br><code>var a = fun(0);</code> 那a是值是什么，是fun(0)，返回的那个对象  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    fun:<span class="function"><span class="keyword">function</span>(<span class="params">m</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fun(m,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个对象，有一个fun的方法，方法返回的结果就是最外面 fun 调用的结果。<br><img src="/img/asda.png" alt="结果"></p><p><code>var a=fun(0)</code>，传入一个参数0，那就是说，函数fun中参数 n 的值是0了，而返回的那个对象中，需要一个参数n，而这个对象的作用域中没有n，它就继续沿着作用域向上一级的作用域中寻找n，最后在函数fun中找到了n，n的值是0，这段话是本文的重点， 明白这段，那问题就容易解决了。<br><br><br>说到这里，这道题基本上可以解决了，希望大家能听明白我上面说的话，下面的就简单了。我们一步一步看。<br><br><br>现在我们知道 a 是  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    fun:<span class="function"><span class="keyword">function</span>(<span class="params">m</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fun(m,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样的一个对象<br><code>a.fun(1);</code> 会怎么样？看代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    fun:<span class="function"><span class="keyword">function</span>(<span class="params"><span class="number">1</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fun(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>a.fun(1);</code> 返回的结果，就是 fun(1,0)，返回的结果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">n,o</span>)</span>&#123; <span class="comment">//n的值为1，o的值为0</span></span><br><span class="line">        <span class="built_in">console</span>.log(o);</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            fun:<span class="function"><span class="keyword">function</span>(<span class="params">m</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> fun(m,n);<span class="comment">//n的值为1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;</span><br><span class="line">fun(<span class="number">1</span>,<span class="number">0</span>);  <span class="comment">//输出0，并返回一个对象，这个对象有一个fun的方法,这个方法调用后，会返回外层fun函数调用的结果，并且外层函数的第二个参数是 n 的值，也就是1</span></span><br></pre></td></tr></table></figure><p><code>a.fun(2);</code> 会怎么样？看代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    fun:<span class="function"><span class="keyword">function</span>(<span class="params"><span class="number">2</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fun(<span class="number">2</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>a.fun(2);</code> 返回的结果，就是 fun(2,0)，返回的结果  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">n,o</span>)</span>&#123; <span class="comment">//n的值为2，o的值为0</span></span><br><span class="line">        <span class="built_in">console</span>.log(o);</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            fun:<span class="function"><span class="keyword">function</span>(<span class="params">m</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> fun(m,n); <span class="comment">//n的值为2</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;</span><br><span class="line">fun(<span class="number">2</span>,<span class="number">0</span>);  <span class="comment">//输出0，并返回一个对象，这个对象有一个fun的方法,这个方法调用后，会返回外层fun函数调用的结果，并且外层函数的第二个参数是 n 的值，也就是2</span></span><br></pre></td></tr></table></figure><p><code>a.fun(3);</code> 就不说了，一样的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = fun(<span class="number">0</span>); a.fun(<span class="number">1</span>); a.fun(<span class="number">2</span>); a.fun(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">var</span> b = fun(<span class="number">0</span>).fun(<span class="number">1</span>).fun(<span class="number">2</span>).fun(<span class="number">3</span>);</span><br></pre></td></tr></table></figure><p>把返回的对象，重新赋值给a，这样两行的结果就是一样的了。<br><code>var c = fun(0).fun(1); c.fun(2); c.fun(3);</code><br>c 与他们的不同，只是<code>var c = fun(0).fun(1);</code> 之后用的是同一个对象罢了。</p><h3><a href="#zong-jie" class="header-anchor">#</a><span id="zong-jie">总结</span></h3><p>说下结果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = fun(<span class="number">0</span>); a.fun(<span class="number">1</span>); a.fun(<span class="number">2</span>); a.fun(<span class="number">3</span>);</span><br><span class="line"><span class="comment">//undefined 0 0 0 </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">var</span> b = fun(<span class="number">0</span>).fun(<span class="number">1</span>).fun(<span class="number">2</span>).fun(<span class="number">3</span>);</span><br><span class="line"><span class="comment">//undefined 0 1 2</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">var</span> c = fun(<span class="number">0</span>).fun(<span class="number">1</span>); c.fun(<span class="number">2</span>); c.fun(<span class="number">3</span>);</span><br><span class="line"><span class="comment">//undefined 0 1 1</span></span><br></pre></td></tr></table></figure><p><a href="http://www.cnblogs.com/xxcanghai/p/4991870.html" target="_blank" rel="noopener">转载来自http://www.cnblogs.com/xxcanghai/p/4991870.html</a><br>顺便推荐几篇讲解闭包的文章<br><br><br><a href="http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html" target="_blank" rel="noopener">学习Javascript闭包（Closure）</a><br><a href="http://kb.cnblogs.com/page/110782/" target="_blank" rel="noopener">Javascript闭包——懂不懂由你，反正我是懂了 </a><br><a href="http://blog.csdn.net/yanghua_kobe/article/details/6780181" target="_blank" rel="noopener">JS闭包可被利用的常见场景</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h3&gt;&lt;p&gt;最近看到这样一段代码&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fun&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n,o&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(o);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       fun:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;m&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; fun(m,n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = fun(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);a.fun(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);a.fun(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);a.fun(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = fun(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).fun(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).fun(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;).fun(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c = fun(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).fun(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);c.fun(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);c.fun(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//问:三行a,b,c的输出分别是什么？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;觉得有点意思，和大家一起来聊聊。&lt;br&gt;我相信如果你不是非常理解JavaScript中的闭包，一定是不想看这段代码的。&lt;br&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://keoy.xyz/tags/javascript/"/>
    
      <category term="闭包" scheme="https://keoy.xyz/tags/%E9%97%AD%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>javascript推箱子</title>
    <link href="https://keoy.xyz/2018/11/24/Sokoban/"/>
    <id>https://keoy.xyz/2018/11/24/Sokoban/</id>
    <published>2018-11-24T07:48:00.000Z</published>
    <updated>2019-03-01T17:04:55.938Z</updated>
    
    <content type="html"><![CDATA[<h2><a href="#qian-yan" class="header-anchor">#</a><span id="qian-yan">前言</span></h2><hr><p>闲来没事做，想来没写过推箱子，便写来玩玩<br>推箱子游戏的 逻辑非常简单，但是如果不动手的话，还是不太清楚。我在这里讲一下自己的思路。<br><a id="more"></a></p><div class="toc-ul"><!-- toc --><ul><li><a href="#si-lu">思路</a></li><li><a href="#kai-shi">开始</a></li><li><a href="#html-bu-fen">html部分</a></li><li><a href="#yang-shi">样式</a></li><li><a href="#javascript-bu-fen">javascript部分</a></li><li><a href="#jie-yu">结语</a></li></ul><!-- tocstop --><p></div></p><h2><a href="#si-lu" class="header-anchor">#</a><span id="si-lu">思路</span></h2><p>先来看下游戏资源 和地图的对比</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 1, 1, 1, 3, 0, 3, 2, 1, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 1, 2, 0, 3, 4, 1, 1, 1, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</span><br><span class="line">0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;</span><br></pre></td></tr></table></figure><p><img src="/images/Snipaste_2019-03-02_00-19-12.png" alt="&#39;地图&#39;" title="地图"></p><p>可以看到地图中的人物以及建筑是和数据中一一对应<br>1对应树<br>2对应球<br>3对应箱子<br>4对应人</p><p>那我们就可以根据数字去生成地图<br>生成地图的同时给所有的dom赋值坐标轴 根据坐标轴来制定游戏规则</p><h2><a href="#kai-shi" class="header-anchor">#</a><span id="kai-shi">开始</span></h2><h2><a href="#html-bu-fen" class="header-anchor">#</a><span id="html-bu-fen">html部分</span></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/mapdata100.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--mapdata100.js中的数组变量是levels--&gt;</span></span><br></pre></td></tr></table></figure><h2><a href="#yang-shi" class="header-anchor">#</a><span id="yang-shi">样式</span></h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-flex;</span><br><span class="line">    <span class="attribute">display</span>: -moz-flex;</span><br><span class="line">    <span class="attribute">display</span>: -ms-flex;</span><br><span class="line">    <span class="attribute">display</span>: -o-flex;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">560px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%,-50%);</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">7px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span> <span class="selector-class">.person</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span> <span class="selector-class">.person</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">17px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#button</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-flex;</span><br><span class="line">    <span class="attribute">display</span>: -moz-flex;</span><br><span class="line">    <span class="attribute">display</span>: -ms-flex;</span><br><span class="line">    <span class="attribute">display</span>: -o-flex;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#button</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#button</span> <span class="selector-tag">button</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#button</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#button</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">40%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><a href="#javascript-bu-fen" class="header-anchor">#</a><span id="javascript-bu-fen">javascript部分</span></h2><p> 定义一个函数<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload =<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> box = <span class="built_in">document</span>.getElementById(<span class="string">'box'</span>);</span><br><span class="line">  <span class="keyword">var</span> mygame = <span class="keyword">new</span> game();</span><br><span class="line">  mygame.start(box);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> game = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure></p><p>添加属性<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br></pre></td><td class="code"><pre><span class="line">game.prototype = &#123;</span><br><span class="line">      variable: &#123;</span><br><span class="line">        x: <span class="number">16</span>,<span class="comment">//坐标</span></span><br><span class="line">        y: <span class="number">16</span>,<span class="comment">//坐标</span></span><br><span class="line">        data:levels,<span class="comment">//关卡数据</span></span><br><span class="line">        person: <span class="literal">null</span>,<span class="comment">//人物</span></span><br><span class="line">        wrap: <span class="literal">null</span>,<span class="comment">//地图盒子</span></span><br><span class="line">        buttonDiv: <span class="literal">null</span>,<span class="comment">//按钮盒子</span></span><br><span class="line">        box: <span class="literal">null</span>,<span class="comment">//传进来的盒子  /也就是父盒子</span></span><br><span class="line">        level: <span class="number">0</span>,<span class="comment">//第几关</span></span><br><span class="line">        passNum: <span class="number">0</span>,<span class="comment">//通关次数</span></span><br><span class="line">        stepNum: <span class="number">0</span><span class="comment">//步数统计</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//历史移动储存 用来返回上一步</span></span><br><span class="line">      step:&#123;</span><br><span class="line">        person: [],</span><br><span class="line">        box: []</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//开始</span></span><br><span class="line">      start:<span class="function"><span class="keyword">function</span> (<span class="params">box</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> wrap = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        <span class="keyword">var</span> button = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        <span class="keyword">this</span>.variable.wrap = wrap;</span><br><span class="line">        <span class="keyword">this</span>.variable.wrap.id = <span class="string">'wrap'</span>;</span><br><span class="line">        <span class="keyword">this</span>.variable.box = box;</span><br><span class="line">        <span class="keyword">this</span>.variable.buttonDiv = button;</span><br><span class="line">        <span class="keyword">this</span>.variable.buttonDiv.id = <span class="string">'button'</span>;</span><br><span class="line">        <span class="keyword">this</span>.variable.box.appendChild(<span class="keyword">this</span>.variable.wrap);</span><br><span class="line">        <span class="keyword">this</span>.variable.box.appendChild(<span class="keyword">this</span>.variable.buttonDiv);</span><br><span class="line">        <span class="keyword">this</span>.init();</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//地图初始化</span></span><br><span class="line">      init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.variable.wrap.innerHTML = <span class="string">''</span>;<span class="comment">//清空地图</span></span><br><span class="line">        <span class="keyword">this</span>.variable.wrap.style.cssText = <span class="string">'background:url(img/block.gif);'</span> + <span class="string">'width:'</span>+ <span class="keyword">this</span>.variable.x * <span class="number">35</span>  +<span class="string">'px;'</span> + <span class="string">'height:'</span>+ <span class="keyword">this</span>.variable.y * <span class="number">35</span>  +<span class="string">'px;'</span>;<span class="comment">//布置地图</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> k <span class="keyword">in</span> <span class="keyword">this</span>.variable.data[<span class="keyword">this</span>.variable.level])&#123;<span class="comment">//根据关卡循环游戏资源布置建筑</span></span><br><span class="line">          <span class="keyword">switch</span>(<span class="keyword">this</span>.variable.data[<span class="keyword">this</span>.variable.level][k])&#123;</span><br><span class="line">            <span class="comment">//树</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">              <span class="keyword">this</span>.createBasic(<span class="string">'wall'</span>,k);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//球</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">              <span class="keyword">this</span>.createBasic(<span class="string">'ball'</span>,k);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//箱子</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">              <span class="keyword">this</span>.createBasic(<span class="string">'box'</span>,k);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//人物</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">              <span class="keyword">this</span>.createBasic(<span class="string">'down'</span>,k);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.controlPerson(<span class="keyword">this</span>.variable.person);<span class="comment">//人物移动控制</span></span><br><span class="line">        <span class="keyword">this</span>.createButton();<span class="comment">//创建按钮</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//创建建筑</span></span><br><span class="line">      createBasic: <span class="function"><span class="keyword">function</span> (<span class="params">type,k</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> Odiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        <span class="keyword">var</span> Oimg = <span class="keyword">new</span> Image();</span><br><span class="line">        <span class="keyword">var</span> y = <span class="built_in">parseInt</span>(k/<span class="keyword">this</span>.variable.x);<span class="comment">//商/即是y轴</span></span><br><span class="line">        <span class="keyword">var</span> x = <span class="built_in">parseInt</span>(k%<span class="keyword">this</span>.variable.y);<span class="comment">//余数即是x轴</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(type == <span class="string">"down"</span>)&#123;</span><br><span class="line">          Odiv.className = <span class="string">'item '</span>+ <span class="string">"person"</span>;<span class="comment">//人物给类</span></span><br><span class="line">          <span class="keyword">this</span>.variable.person = Odiv;<span class="comment">//人物存储</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">          Odiv.className = <span class="string">'item '</span>+ type;<span class="comment">//type给类</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Oimg.src = <span class="string">'img/'</span> + type + <span class="string">'.png'</span>;<span class="comment">//src</span></span><br><span class="line">        Odiv.x = x;<span class="comment">//自定义属性，即元素存储坐标轴 也是用来判断人物/箱子/树/球之间的关系 也是思路的核心</span></span><br><span class="line">        Odiv.y = y;</span><br><span class="line">        Odiv.style.cssText = <span class="string">'left: '</span>+ x*<span class="number">35</span>+ <span class="string">'px;top:'</span> + y * <span class="number">35</span> + <span class="string">'px;z-index:'</span> + (y*<span class="keyword">this</span>.variable.x) +<span class="string">';'</span>;<span class="comment">//坐标轴定义位置，z-index是为了上下层级(优化细节)/y越大的层级越高</span></span><br><span class="line">        Odiv.appendChild(Oimg);</span><br><span class="line">        <span class="keyword">this</span>.variable.wrap.appendChild(Odiv);</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//创建按钮</span></span><br><span class="line">      createButton:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.variable.buttonDiv.innerHTML = <span class="string">''</span>;<span class="comment">//清空按钮组</span></span><br><span class="line">        <span class="keyword">var</span> _this = <span class="keyword">this</span>;<span class="comment">//点击事件要用的this变量  这里不懂得百度一下函数作用域和this指向</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> p = <span class="built_in">document</span>.createElement(<span class="string">"p"</span>);</span><br><span class="line">        <span class="keyword">var</span> next = <span class="built_in">document</span>.createElement(<span class="string">"button"</span>);</span><br><span class="line">        <span class="keyword">var</span> prev = <span class="built_in">document</span>.createElement(<span class="string">"button"</span>);</span><br><span class="line">        <span class="keyword">var</span> again = <span class="built_in">document</span>.createElement(<span class="string">"button"</span>);</span><br><span class="line">        <span class="keyword">var</span> Prev_step = <span class="built_in">document</span>.createElement(<span class="string">"button"</span>);</span><br><span class="line">        <span class="keyword">var</span> input_div = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        <span class="keyword">var</span> jump = <span class="built_in">document</span>.createElement(<span class="string">"button"</span>);</span><br><span class="line">        <span class="keyword">var</span> text = <span class="built_in">document</span>.createElement(<span class="string">"input"</span>);</span><br><span class="line"></span><br><span class="line">        text.placeholder = <span class="string">'Please enter 1~100 '</span>;</span><br><span class="line">        text.type = <span class="string">'number'</span>;</span><br><span class="line">        input_div.appendChild(text);</span><br><span class="line">        input_div.appendChild(jump);</span><br><span class="line">        p.innerHTML = (<span class="keyword">this</span>.variable.level+<span class="number">1</span>) + <span class="string">'level'</span>;</span><br><span class="line">        prev.innerHTML = <span class="string">'prev level'</span>;</span><br><span class="line">        next.innerHTML = <span class="string">'next level'</span>;</span><br><span class="line">        again.innerHTML = <span class="string">'again'</span>;</span><br><span class="line">        Prev_step.innerHTML = <span class="string">'Prev step'</span>;</span><br><span class="line">        jump.innerHTML = <span class="string">'Level skip'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.variable.buttonDiv.appendChild(p);</span><br><span class="line">        <span class="keyword">this</span>.variable.buttonDiv.appendChild(input_div);</span><br><span class="line">        <span class="keyword">this</span>.variable.buttonDiv.appendChild(prev);</span><br><span class="line">        <span class="keyword">this</span>.variable.buttonDiv.appendChild(next);</span><br><span class="line">        <span class="keyword">this</span>.variable.buttonDiv.appendChild(again);</span><br><span class="line">        <span class="keyword">this</span>.variable.buttonDiv.appendChild(Prev_step);</span><br><span class="line">        prev.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">          _this.variable.level --;<span class="comment">//关卡-1</span></span><br><span class="line">          <span class="keyword">if</span>(_this.variable.level &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            _this.variable.level = <span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          _this.init();<span class="comment">//重新布置地图</span></span><br><span class="line">        &#125;</span><br><span class="line">        next.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">          _this.variable.level ++;<span class="comment">//关卡+1</span></span><br><span class="line">          <span class="keyword">if</span>(_this.variable.level &gt; <span class="number">99</span>)&#123;</span><br><span class="line">            _this.variable.level = <span class="number">99</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          _this.init();<span class="comment">//重新布置地图</span></span><br><span class="line">        &#125;</span><br><span class="line">        again.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">          _this.init();<span class="comment">//重新布置地图</span></span><br><span class="line">        &#125;</span><br><span class="line">        Prev_step.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">          _this.prev(_this);<span class="comment">//退回上一步 传入_this</span></span><br><span class="line">        &#125;</span><br><span class="line">        text.onkeyup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;<span class="comment">//关卡跳转验证</span></span><br><span class="line">          <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"^([1-9]|[1-9]\\d|100)$"</span>);</span><br><span class="line">              <span class="keyword">if</span>(!reg.test(<span class="keyword">this</span>.value))&#123;</span><br><span class="line">                  alert(<span class="string">"请输入1-100的整数！"</span>)</span><br><span class="line">                  <span class="keyword">this</span>.value = <span class="string">''</span></span><br><span class="line">              &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        jump.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;<span class="comment">//关卡跳转</span></span><br><span class="line">          <span class="keyword">if</span>(!text.value == <span class="string">''</span> || !text.value == <span class="literal">null</span>)&#123;</span><br><span class="line">            _this.variable.level = text.value</span><br><span class="line">            _this.variable.level = <span class="built_in">parseInt</span>(_this.variable.level)</span><br><span class="line">            _this.variable.level--<span class="comment">//不知道为什么关卡+1了，这里需要-1 //我也想不明白</span></span><br><span class="line">            _this.init()<span class="comment">//重新布置地图</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//人物控制</span></span><br><span class="line">      controlPerson: <span class="function"><span class="keyword">function</span> (<span class="params">p</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> img = p.firstElementChild;<span class="comment">//div下的图片</span></span><br><span class="line">        <span class="keyword">var</span> _this = <span class="keyword">this</span>; <span class="comment">//键盘事件要用的this变量</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span> (<span class="params">ev</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">          ev = ev || <span class="built_in">window</span>.event;</span><br><span class="line">          <span class="keyword">var</span> keycode = ev.keyCode;</span><br><span class="line">          _this.step.person[_this.variable.stepNum] = &#123;&#125;<span class="comment">//定义人物历史移动数据对象</span></span><br><span class="line">          _this.step.person[_this.variable.stepNum].src = _this.variable.person.firstElementChild.src;<span class="comment">//人物历史移动朝向</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">switch</span>(keycode)&#123;</span><br><span class="line">            <span class="comment">//left</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">37</span>:</span><br><span class="line">              img.src = <span class="string">'img/left.png'</span>;</span><br><span class="line">              _this.movePerson(&#123;<span class="attr">x</span>:<span class="number">-1</span>&#125;,p);<span class="comment">//传入x-1，即坐标轴x-1，向左移动一步 下面同理</span></span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//up</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">38</span>:</span><br><span class="line">              img.src = <span class="string">'img/up.png'</span>;</span><br><span class="line">              _this.movePerson(&#123;<span class="attr">y</span>:<span class="number">-1</span>&#125;,p);<span class="comment">//传入y-1，即坐标轴y-1，向上移动一步 下面同理</span></span><br><span class="line"></span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//right</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">39</span>:</span><br><span class="line">              img.src = <span class="string">'img/right.png'</span>;</span><br><span class="line">              _this.movePerson(&#123;<span class="attr">x</span>:<span class="number">1</span>&#125;,p);</span><br><span class="line"></span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//down</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">40</span>:</span><br><span class="line">              img.src = <span class="string">'img/down.png'</span>;</span><br><span class="line">              _this.movePerson(&#123;<span class="attr">y</span>:<span class="number">1</span>&#125;,p);</span><br><span class="line"></span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//人物移动</span></span><br><span class="line">      movePerson: <span class="function"><span class="keyword">function</span> (<span class="params">obj,el</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> x = obj.x || <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> y = obj.y || <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> k = <span class="keyword">this</span>.variable.data[<span class="keyword">this</span>.variable.level][ (el.x+x) + (el.y+y) * <span class="keyword">this</span>.variable.x ]; <span class="comment">//当前数据  </span></span><br><span class="line">        <span class="comment">//(el.x+x) + (el.y+y) * this.variable.x为下标</span></span><br><span class="line">        <span class="keyword">var</span> box = <span class="keyword">this</span>.variable.wrap.querySelectorAll(<span class="string">".box"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(k != <span class="number">1</span>)&#123;<span class="comment">//如果人物没撞上树 移动</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">//存储上一步</span></span><br><span class="line">          <span class="keyword">this</span>.step.person[<span class="keyword">this</span>.variable.stepNum].x = el.x;</span><br><span class="line">          <span class="keyword">this</span>.step.person[<span class="keyword">this</span>.variable.stepNum].y = el.y;</span><br><span class="line"></span><br><span class="line">          <span class="comment">//人物移动</span></span><br><span class="line">          el.x += x;</span><br><span class="line">          el.y += y;</span><br><span class="line">          el.style.left = el.x * <span class="number">35</span> + <span class="string">'px'</span>;</span><br><span class="line">          el.style.top = el.y * <span class="number">35</span> + <span class="string">'px'</span>;</span><br><span class="line">          el.style.zIndex = el.x + el.y * <span class="keyword">this</span>.variable.x;</span><br><span class="line">          <span class="comment">//移动结束</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">this</span>.variable.stepNum ++;<span class="comment">//移动步数+1</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> i = box.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(box[i].x == el.x &amp;&amp; box[i].y == el.y)&#123;<span class="comment">//人物移动后 人物与箱子的x，y相等 即人物撞上箱子</span></span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span>(<span class="keyword">this</span>.variable.data[<span class="keyword">this</span>.variable.level][ (box[i].x+x) + (box[i].y+y) * <span class="keyword">this</span>.variable.x ] != <span class="number">1</span>)&#123;<span class="comment">//如果箱子没撞上树</span></span><br><span class="line">                <span class="comment">//上面的(box[i].x+x) + (box[i].y+y) * this.variable.x 就是箱子在数据中的下标 </span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">this</span>.collision(box[i],x,y))&#123;<span class="comment">//判断箱子之间的碰撞 没用碰撞执行</span></span><br><span class="line"></span><br><span class="line">                  <span class="keyword">this</span>.step.box[<span class="keyword">this</span>.variable.stepNum<span class="number">-1</span>] = &#123;&#125;;<span class="comment">//定义箱子的第·移动步数·个的对象 前面+1了，这里要-1 才是原来的步数</span></span><br><span class="line">                  <span class="keyword">this</span>.step.box[<span class="keyword">this</span>.variable.stepNum<span class="number">-1</span>].index = i;<span class="comment">//箱子有未知个 要存储未知个箱子的上一步，就有未知个对象 存入this.step.box  也就是i个箱子</span></span><br><span class="line"></span><br><span class="line">                  <span class="keyword">this</span>.step.box[<span class="keyword">this</span>.variable.stepNum<span class="number">-1</span>].x = box[i].x;<span class="comment">//上一步存入</span></span><br><span class="line">                  <span class="keyword">this</span>.step.box[<span class="keyword">this</span>.variable.stepNum<span class="number">-1</span>].y = box[i].y;</span><br><span class="line"></span><br><span class="line">                  <span class="comment">//箱子移动</span></span><br><span class="line">                  box[i].x += x;</span><br><span class="line">                  box[i].y += y;</span><br><span class="line">                  box[i].style.left = box[i].x * <span class="number">35</span> + <span class="string">'px'</span>;</span><br><span class="line">                  box[i].style.top = box[i].y * <span class="number">35</span> + <span class="string">'px'</span>;</span><br><span class="line">                  box[i].style.zIndex = box[i].x + box[i].y * <span class="keyword">this</span>.variable.x;</span><br><span class="line">                  <span class="comment">//移动结束</span></span><br><span class="line"></span><br><span class="line">                  <span class="keyword">this</span>.pass();<span class="comment">//每一次箱子移动后 需要验证是否过关</span></span><br><span class="line"></span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;<span class="comment">//箱子碰到箱子  箱子不做操作  但是上面人物已经移动 这里就需要把人还原 也就是坐标各-1</span></span><br><span class="line"></span><br><span class="line">                  <span class="comment">//人物移动</span></span><br><span class="line">                  el.x -= x;</span><br><span class="line">                  el.y -= y;</span><br><span class="line">                  el.style.left = el.x * <span class="number">35</span> + <span class="string">'px'</span>;</span><br><span class="line">                  el.style.top = el.y * <span class="number">35</span> + <span class="string">'px'</span>;</span><br><span class="line">                  el.style.zIndex = el.x + el.y * <span class="keyword">this</span>.variable.x;</span><br><span class="line">                  <span class="comment">//移动结束</span></span><br><span class="line"></span><br><span class="line">                  <span class="keyword">this</span>.variable.stepNum --;<span class="comment">//移动步数-1</span></span><br><span class="line">                  <span class="keyword">this</span>.step.person.pop();<span class="comment">//上面人物移动前已经存储了历史移动  这里人物需要还原了 历史移动数组就得减去最后一个对象</span></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">              &#125;<span class="keyword">else</span> &#123;<span class="comment">//如果箱子撞上树 箱子不做操作  但是上面人物已经移动 这里就需要把人还原 也就是坐标各-1</span></span><br><span class="line"></span><br><span class="line">                el.x -= x;<span class="comment">//这里跟上面一样  还原</span></span><br><span class="line">                el.y -= y;</span><br><span class="line">                el.style.left = el.x * <span class="number">35</span> + <span class="string">'px'</span>;</span><br><span class="line">                el.style.top = el.y * <span class="number">35</span> + <span class="string">'px'</span>;</span><br><span class="line">                el.style.zIndex = el.x + el.y * <span class="keyword">this</span>.variable.x;</span><br><span class="line">                <span class="keyword">this</span>.variable.stepNum --;</span><br><span class="line">                <span class="keyword">this</span>.step.person.pop();</span><br><span class="line"></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//箱子与箱子的碰撞</span></span><br><span class="line">      collision: <span class="function"><span class="keyword">function</span> (<span class="params">el,x,y</span>)</span>&#123; <span class="comment">//传入得值分别是 box[i]第i个箱子,移动的x值,移动的y值(也就是this.movePerson中的x,y)</span></span><br><span class="line">        <span class="keyword">var</span> box = <span class="keyword">this</span>.variable.wrap.querySelectorAll(<span class="string">".box"</span>);<span class="comment">//所有的箱子</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = box.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123; <span class="comment">//循环所有箱子</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span>(box[i] != el)&#123;<span class="comment">//两个箱子是不是同一个</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(box[i].x == el.x+x &amp;&amp; box[i].y == el.y+y)&#123;<span class="comment">//下一步的坐标与一个箱子的坐标相等，也就是说两个箱子有重合， 返回false</span></span><br><span class="line"></span><br><span class="line">              <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//下一步的坐标与一个箱子的坐标不相等，也就是说两个箱子不重合， 返回true</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//过关检测</span></span><br><span class="line">      pass: <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> box = <span class="keyword">this</span>.variable.wrap.querySelectorAll(<span class="string">".box"</span>);<span class="comment">//箱子</span></span><br><span class="line">        <span class="keyword">var</span> ball = <span class="keyword">this</span>.variable.wrap.querySelectorAll(<span class="string">".ball"</span>);<span class="comment">//球</span></span><br><span class="line">        <span class="keyword">var</span> ballNum = <span class="number">0</span>;<span class="comment">//箱子有未知个 要计数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = box.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> g = ball.length - <span class="number">1</span>; g &gt;= <span class="number">0</span>; g--) &#123;</span><br><span class="line">            <span class="keyword">if</span>(box[i].x == ball[g].x &amp;&amp; box[i].y == ball[g].y)&#123;<span class="comment">//箱子和球的坐标相等 则成功的箱子+1</span></span><br><span class="line">              ballNum ++;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ballNum == ball.length)&#123;<span class="comment">//成功的箱子个数等于球的个数  游戏过关</span></span><br><span class="line">          alert(<span class="string">"success"</span>);</span><br><span class="line">          <span class="keyword">this</span>.variable.level ++;<span class="comment">//成功后关卡+1</span></span><br><span class="line">          <span class="keyword">this</span>.init();<span class="comment">//重置地图 进入下一关</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//上一步</span></span><br><span class="line">      prev: <span class="function"><span class="keyword">function</span> (<span class="params">_this</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> w_box = _this.variable.wrap.querySelectorAll(<span class="string">".box"</span>);<span class="comment">//所有箱子</span></span><br><span class="line">        <span class="keyword">if</span>(_this.variable.stepNum != <span class="number">0</span>)&#123;<span class="comment">//移动步数不等于0</span></span><br><span class="line"></span><br><span class="line">          _this.variable.person.x = _this.step.person[_this.variable.stepNum<span class="number">-1</span>].x;<span class="comment">//返回上一步 移动步数-1 赋值人物坐标</span></span><br><span class="line">          _this.variable.person.y = _this.step.person[_this.variable.stepNum<span class="number">-1</span>].y;</span><br><span class="line"></span><br><span class="line">          _this.variable.person.style.left = _this.variable.person.x * <span class="number">35</span> + <span class="string">'px'</span>;<span class="comment">//人物坐标退回上一步</span></span><br><span class="line">          _this.variable.person.style.top = _this.variable.person.y * <span class="number">35</span> + <span class="string">'px'</span>;</span><br><span class="line"></span><br><span class="line">          _this.variable.person.style.zIndex = _this.variable.person.x + _this.variable.person.y * _this.variable.x;<span class="comment">//层级也要重新赋值</span></span><br><span class="line">          _this.variable.person.firstElementChild.src = _this.step.person[_this.variable.stepNum<span class="number">-1</span>].src;<span class="comment">//人物朝向更改</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span>(_this.step.box[_this.variable.stepNum<span class="number">-1</span>])&#123;<span class="comment">//箱子与人物的移动步数不一样 另外判断 是否存在</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> box_i = w_box[_this.step.box[_this.variable.stepNum<span class="number">-1</span>].index]<span class="comment">//第i个box  也就是箱子移动时储存的i</span></span><br><span class="line"></span><br><span class="line">            box_i.x = _this.step.box[_this.variable.stepNum<span class="number">-1</span>].x;<span class="comment">//返回上一步 移动步数-1 赋值箱子坐标</span></span><br><span class="line">            box_i.y = _this.step.box[_this.variable.stepNum<span class="number">-1</span>].y;</span><br><span class="line"></span><br><span class="line">            box_i.style.left = box_i.x * <span class="number">35</span> + <span class="string">'px'</span>;<span class="comment">//人物坐标退回上一步</span></span><br><span class="line">            box_i.style.top = box_i.y * <span class="number">35</span> + <span class="string">'px'</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          _this.variable.stepNum--;<span class="comment">//返回上一步后 移动步数-1</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h2><a href="#jie-yu" class="header-anchor">#</a><span id="jie-yu">结语</span></h2><p>还是挺好玩的 啦啦啦啦<br><a href="/custompage/sokoban.html">预览</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;闲来没事做，想来没写过推箱子，便写来玩玩&lt;br&gt;推箱子游戏的 逻辑非常简单，但是如果不动手的话，还是不太清楚。我在这里讲一下自己的思路。&lt;br&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://keoy.xyz/tags/javascript/"/>
    
      <category term="推箱子" scheme="https://keoy.xyz/tags/%E6%8E%A8%E7%AE%B1%E5%AD%90/"/>
    
      <category term="小游戏" scheme="https://keoy.xyz/tags/%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>welcome</title>
    <link href="https://keoy.xyz/2018/11/20/test/"/>
    <id>https://keoy.xyz/2018/11/20/test/</id>
    <published>2018-11-20T12:12:00.000Z</published>
    <updated>2019-03-01T16:52:47.817Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> _            _       _____      _          ___       _____       _          _       _____</span><br><span class="line">( )    /\    ( )     ( ____)    ( )        / _ \     (  _  )     ( )        ( )     ( ____)</span><br><span class="line"> \ \  /  \  / /      | |___     | |       | ( (_)    | | | |     |   \    /   |     | |___</span><br><span class="line">  \ \/    \/ /       |  ___)    | |       | |  _     | | | |     | |\ \  / /| |     |  ___)</span><br><span class="line">   \   /\   /        | |___     | |____   | (_( )    | |_| |     | | \ \/ / | |     | |___</span><br><span class="line">    \_/  \_/         (_____)    (______)   \___/     (_____)     (_)  \__/  (_)     (_____)</span><br></pre></td></tr></table></figure><a id="more"></a> <div class="toc-ul"><!-- toc --><!-- tocstop --></div>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; _            _       _____      _          ___       _____       _          _       _____&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;( )    /\    ( )     ( ____)    ( )        / _ \     (  _  )     ( )        ( )     ( ____)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; \ \  /  \  / /      | |___     | |       | ( (_)    | | | |     |   \    /   |     | |___&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  \ \/    \/ /       |  ___)    | |       | |  _     | | | |     | |\ \  / /| |     |  ___)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   \   /\   /        | |___     | |____   | (_( )    | |_| |     | | \ \/ / | |     | |___&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    \_/  \_/         (_____)    (______)   \___/     (_____)     (_)  \__/  (_)     (_____)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="welcome" scheme="https://keoy.xyz/tags/welcome/"/>
    
  </entry>
  
</feed>
